{"version":3,"sources":["components/FizzBuzz.js","components/TriangleChecker.js","App.js","index.js"],"names":["FizzBuzz","useState","numbers","display","setDisplay","useEffect","fizzbuzzCalculation","modulus","isDivisible","result","i","push","currentNumber","divisibleBy","StyledSection","map","number","index","StyledDiv","StyledP","key","styled","section","div","p","TriangleChecker","firstSide","setFirstSide","secondSide","setSecondSide","thirdSide","setThirdSide","isATriangle","setIsATriangle","isNotATriangle","setIsNotATriangle","setTimeout","StyledRules","onSubmit","e","preventDefault","firstAndSecondSide","parseInt","firstAndThirdSide","secondAndThirdSide","StyledInput","type","onChange","target","value","StyledButton","StyledWinP","StyledLoseP","input","button","App","className","ReactDOM","render","document","getElementById"],"mappings":"wxBAGA,IA6CeA,EA7CE,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACdC,EADc,aAESD,oBAAS,IAFlB,mBAEdE,EAFc,KAELC,EAFK,KAIrBC,qBAAU,WACRC,EAAoBC,MAGtB,IAAMD,EAAsB,SAACE,GAE3B,IADA,IAAIC,EACKC,EAAI,EAAGA,GAAK,IAAKA,IACxBD,EAAS,GACiB,IAAtBD,EAAYE,EAAG,KACjBD,GAAU,QAEc,IAAtBD,EAAYE,EAAG,KACjBD,GAAU,QAEG,KAAXA,IACFA,GAAUC,GAEZR,EAAQS,KAAKF,GAEfL,GAAW,IAGPG,EAAU,SAACK,EAAeC,GAC9B,OAAOD,EAAgBC,GAGzB,OACE,kBAACC,EAAD,KACGX,EACGD,EAAQa,KAAI,SAACC,EAAQC,GACnB,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAASC,IAAKH,GAAQD,OAI5B,OAOJF,EAAgBO,IAAOC,QAAV,KAUbJ,EAAYG,IAAOE,IAAV,KAWTJ,EAAUE,IAAOG,EAAV,K,sgCCpEb,IA0EeC,EA1ES,WAAO,IAAD,EACMxB,mBAAS,MADf,mBACrByB,EADqB,KACVC,EADU,OAEQ1B,mBAAS,MAFjB,mBAErB2B,EAFqB,KAETC,EAFS,OAGM5B,mBAAS,MAHf,mBAGrB6B,EAHqB,KAGVC,EAHU,OAIU9B,oBAAS,GAJnB,mBAIrB+B,EAJqB,KAIRC,EAJQ,OAKgBhC,oBAAS,GALzB,mBAKrBiC,EALqB,KAKLC,EALK,KA+B5B,OAPA9B,qBAAU,WACR+B,YAAW,WACTH,GAAe,GACfE,GAAkB,KACjB,OACF,CAACH,EAAaE,IAGf,kBAAC,EAAD,KACE,gCACE,iDAEF,kBAACG,EAAD,kDACA,kBAACA,EAAD,0GAIA,kBAACA,EAAD,2FAIA,kBAACA,EAAD,iGAIA,0BAAMC,SA1CQ,SAACC,GACjBA,EAAEC,iBACF,IAAIC,EAAqBC,SAAShB,GAAagB,SAASd,GACpDe,EAAoBD,SAAShB,GAAagB,SAASZ,GACnDc,EAAqBF,SAASd,GAAcc,SAASZ,GAEvDJ,EAAYkB,GACZhB,EAAae,GACbb,EAAYW,GAEZR,GAAe,GACfE,GAAkB,IAElBA,GAAkB,KA8BhB,kBAACU,EAAD,CACEC,KAAK,SACLC,SAAU,SAACR,GAAD,OAAOZ,EAAaY,EAAES,OAAOC,UAEzC,kBAACJ,EAAD,CACEC,KAAK,SACLC,SAAU,SAACR,GAAD,OAAOV,EAAcU,EAAES,OAAOC,UAE1C,kBAACJ,EAAD,CACEC,KAAK,SACLC,SAAU,SAACR,GAAD,OAAOR,EAAaQ,EAAES,OAAOC,UAEzC,kBAACC,EAAD,CAAcJ,KAAK,UAAnB,cAEDd,EACC,kBAACmB,EAAD,oCACE,KACHjB,EACC,kBAACkB,EAAD,6CACE,OAOJtC,EAAgBO,IAAOC,QAAV,KASbe,EAAchB,IAAOG,EAAV,KAIXqB,EAAcxB,IAAOgC,MAAV,KAaXH,EAAe7B,IAAOiC,OAAV,KAeZH,EAAa9B,IAAOG,EAAV,KAKV4B,EAAc/B,IAAOG,EAAV,K,qKC/GF+B,MATf,WACE,OACE,kBAAC,EAAD,CAAWC,UAAU,OACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,QAOAtC,EAAYG,IAAOE,IAAV,K,MCXfkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db9e55bf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FizzBuzz = () => {\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fizzbuzzCalculation(modulus);\r\n  });\r\n\r\n  const fizzbuzzCalculation = (isDivisible) => {\r\n    let result;\r\n    for (let i = 1; i <= 100; i++) {\r\n      result = \"\";\r\n      if (isDivisible(i, 3) === 0) {\r\n        result += \"Fizz\";\r\n      }\r\n      if (isDivisible(i, 5) === 0) {\r\n        result += \"Buzz\";\r\n      }\r\n      if (result === \"\") {\r\n        result += i;\r\n      }\r\n      numbers.push(result);\r\n    }\r\n    setDisplay(true);\r\n  };\r\n\r\n  const modulus = (currentNumber, divisibleBy) => {\r\n    return currentNumber % divisibleBy;\r\n  };\r\n\r\n  return (\r\n    <StyledSection>\r\n      {display\r\n        ? numbers.map((number, index) => {\r\n            return (\r\n              <StyledDiv>\r\n                <StyledP key={index}>{number}</StyledP>\r\n              </StyledDiv>\r\n            );\r\n          })\r\n        : null}\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default FizzBuzz;\r\n\r\nconst StyledSection = styled.section`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: blue;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 100px;\r\n  height: 50px;\r\n  border-radius: 15px;\r\n  background-color: orange;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 5px;\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font-size: 24px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TriangleChecker = () => {\r\n  const [firstSide, setFirstSide] = useState(null);\r\n  const [secondSide, setSecondSide] = useState(null);\r\n  const [thirdSide, setThirdSide] = useState(null);\r\n  const [isATriangle, setIsATriangle] = useState(false);\r\n  const [isNotATriangle, setIsNotATriangle] = useState(false);\r\n\r\n  const calculate = (e) => {\r\n    e.preventDefault();\r\n    let firstAndSecondSide = parseInt(firstSide) + parseInt(secondSide);\r\n    let firstAndThirdSide = parseInt(firstSide) + parseInt(thirdSide);\r\n    let secondAndThirdSide = parseInt(secondSide) + parseInt(thirdSide);\r\n    if (\r\n      firstSide < secondAndThirdSide &&\r\n      secondSide < firstAndThirdSide &&\r\n      thirdSide < firstAndSecondSide\r\n    ) {\r\n      setIsATriangle(true);\r\n      setIsNotATriangle(false);\r\n    } else {\r\n      setIsNotATriangle(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsATriangle(false);\r\n      setIsNotATriangle(false);\r\n    }, 4000);\r\n  }, [isATriangle, isNotATriangle]);\r\n\r\n  return (\r\n    <StyledSection>\r\n      <header>\r\n        <h1>Triangle Checker</h1>\r\n      </header>\r\n      <StyledRules>Submit three lengths below and hit enter.</StyledRules>\r\n      <StyledRules>\r\n        If those three lengths can come together to form a valid triangle a\r\n        message will come up in green\r\n      </StyledRules>\r\n      <StyledRules>\r\n        Otherwise those lengths do not form a valid triangle and a red message\r\n        will pop up\r\n      </StyledRules>\r\n      <StyledRules>\r\n        Although you don't need to enter any units, all lengths entered must be\r\n        of the same unit\r\n      </StyledRules>\r\n      <form onSubmit={calculate}>\r\n        <StyledInput\r\n          type=\"number\"\r\n          onChange={(e) => setFirstSide(e.target.value)}\r\n        />\r\n        <StyledInput\r\n          type=\"number\"\r\n          onChange={(e) => setSecondSide(e.target.value)}\r\n        />\r\n        <StyledInput\r\n          type=\"number\"\r\n          onChange={(e) => setThirdSide(e.target.value)}\r\n        />\r\n        <StyledButton type=\"submit\">Calculate</StyledButton>\r\n      </form>\r\n      {isATriangle ? (\r\n        <StyledWinP>YEAH! THAT MAKES A TRIANGLE</StyledWinP>\r\n      ) : null}\r\n      {isNotATriangle ? (\r\n        <StyledLoseP>SORRY! THAT DOES NOT MAKE A TRIANGLE</StyledLoseP>\r\n      ) : null}\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default TriangleChecker;\r\n\r\nconst StyledSection = styled.section`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: orange;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledRules = styled.p`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  height: 30px;\r\n  width: 125px;\r\n  font-size: 24px;\r\n  border: none;\r\n  border-radius: 125px;\r\n  margin: 5px;\r\n  padding-left: 8px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  height: 30px;\r\n  width: 125px;\r\n  font-size: 22px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:active {\r\n    transform: scale(0.95, 0.95);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledWinP = styled.p`\r\n  color: green;\r\n  font-size: 33px;\r\n`;\r\n\r\nconst StyledLoseP = styled.p`\r\n  color: red;\r\n  font-size: 33px;\r\n`;\r\n","import React from \"react\";\nimport FizzBuzz from \"./components/FizzBuzz\";\nimport TriangleChecker from \"./components/TriangleChecker\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <StyledDiv className=\"App\">\n      <FizzBuzz />\n      <TriangleChecker />\n    </StyledDiv>\n  );\n}\n\nexport default App;\n\nconst StyledDiv = styled.div`\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  height: 200vh;\n  width: 100vw;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}